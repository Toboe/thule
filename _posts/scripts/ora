
List all users/schema
         SET PAGESIZE 50
         SELECT DISTINCT USERNAME FROM DBA_USERS;
 
List ONLY your tables
         SET PAGESIZE 80
         COL TABLE__NAME FORMAT a30;
         COL TABLE_TYPE FORMAT a30;
         SELECT * FROM CAT;

List the Oracle Tablespaces and free space
         SELECT * from v$TABLESPACE;

List the free space for all Oracle Tablespaces within a Database
         SELECT * from DBD_FREE_SPACE where TABLESPACE_NAME = 'IATOR';

List the space ALREADY USED for a specific Oracle Tablespace
         SELECT * from DBA_SEGMENTS where TABLESPACE_NAME = 'myTABLESPACE';

List extents for segments
         SELECT TABLESPACE_NAME, count(*), max(blocks), sum(blocks) from dba_free_space group by TABLESPACE_name;

See all the tables you have access to:
         SET PAGESIZE 90
         COLUMN "OBJECT NAME" format a26
         COLUMN "OBJECT TYPE" format a20
         SELECT object_name    "OBJECT NAME",
                object_type    "OBJECT TYPE"
         FROM
                user_objects
         WHERE
                object_type = 'TABLE';

See your TABLESPACE
         SELECT TABLESPACE_NAME from ALL_TABLES where TABLE_NAME = '<your_table>'


#jobs created
select * from dba_SCHEDULER_JOBS
#jobs running
select * from dba_scheduler_running_jobs

#drop scheduler jobs
select 'BEGIN DBMS_SCHEDULER.DISABLE(''' || owner ||'.'||job_name ||'''); END;'


from dba_SCHEDULER_JOBS

cd $ORACLE_HOME/OPatch
opatch lsinventory
opatch lsinventory -invPtrLoc /etc/oraInst.loc

select comp_id, version from dba_registry;
SELECT * FROM V$VERSION;


select * from NLS_DATABASE_PARAMETERS;
select * from NLS_instance_PARAMETERS;
select * from NLS_session_PARAMETERS;
select * from sys.V_$NLS_VALID_VALUES a where a.isdeprecated != 'FALSE' ;

select * from sys.V_$NLS_VALID_VALUES;



    -- Here we use from 1-jan-2012 to 30-aug-2012
     
    SELECT TO_DATE(TRUNC(DBMS_RANDOM.VALUE(TO_CHAR(TO_DATE('1-jan-2012'),'J'),TO_CHAR(TO_DATE('30-aug-2012'),'J'))),'J') FROM DUAL;
     
     
    -- To produce a random date within a specified number of days from today:
     
    -- Here we use two weeks (14 days) allowing dates in the past as well as the future
     
    SELECT SYSDATE+DBMS_RANDOM.VALUE(-14,14) FROM DUAL;
     
     
    -- Here we use three weeks (21 days) allowing dates only in the future
     
    SELECT SYSDATE+DBMS_RANDOM.VALUE(1,14) FROM DUAL;
     
     
    -- Here we use a year (365 days) allowing dates only in the past
     
    SELECT SYSDATE+DBMS_RANDOM.VALUE(-365,0) FROM DUAL;



shu immediate;
startup pfile='путь к initIPSOFT.ora';

alter system set sga_max_size=<value> scope=spfile|memory|both;o


     Or In Another Way :
    sql>alter system set sga_target=12G scope=spfile sid='*';
    sql>alter system set sga_max_size=16G scope=spfile sid='*';
    sql>alter system set sga_max_size=16G scope=spfile ;
    sql>alter system set sga_target=12G scope=spfile;

     PGA :

    sql>alter system set pga_aggregate_target=4G scope =spfile sid='*';
    sql>alter system set pga_aggregate_target=4G scope=both;



    shutdown database PROD (two instances should be shut down)

     $>srvctl stop database -d PROD

    $>srvctl START database -d PROD



Check The New Size For Both Instance By :

    Show parameter sga ; 


# sysctl -a | grep shmmax
kernel.shmmax = 8G


$ srvctl stop instance -d racdb -i racdb1 -o immediate
$ srvctl start instance -d racdb -i racdb1

if error... check alert log on racdb1 and solve(don't forget to change "SGA_TARGET" as well), if no error stop/start on racdb2

$ srvctl stop instance -d racdb -i racdb2 -o immediate
$ srvctl start instance -d racdb -i racdb2

Check:
select * from v$sgainfo;
select * from v$sga;


